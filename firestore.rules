rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to be read by anyone authenticated, but only written by themselves or a director.
    match /users/{userId} {
      allow read: if isUserAuthenticated();
      allow write: if request.auth.uid == userId || isRole('directeur');
    }

    // Allow authenticated users to read content collections
    match /stages/{stageId} {
      allow read: if isUserAuthenticated();
      allow write: if isRole('directeur'); // Only directors can create/update/delete stages
    }

    match /levels/{levelId} {
      allow read: if isUserAuthenticated();
      allow write: if isRole('directeur'); // Only directors can manage levels
    }
    
    match /subjects/{subjectId} {
      allow read: if isUserAuthenticated();
      allow write: if isRole('directeur'); // Only directors can manage subjects
    }
    
    // Lessons can be read by anyone, but only written by their author or a director.
    match /lessons/{lessonId} {
      allow read: if isUserAuthenticated();
      // Allow create if user is teacher or supervisor
      allow create: if isRole('teacher') || isRole('supervisor_subject');
      // Allow update/delete if user is the author or a director
      allow update, delete: if resource.data.authorId == request.auth.uid || isRole('directeur') || isRole('supervisor_subject');
    }
    
    // Student progress can only be read/written by the student themselves.
    match /users/{studentId}/lessonProgress/{progressId} {
      allow read, write: if request.auth.uid == studentId;
    }
    
    // Messages can be created by anyone, read if they are the receiver or a director/supervisor
    match /messages/{messageId} {
      allow create: if isUserAuthenticated();
      allow read: if resource.data.receiverId == request.auth.uid || isRole('directeur') || isRole('supervisor_general');
      allow update: if isRole('directeur') || isRole('supervisor_general'); // For forwarding
    }
    
    // Supervisor notes can be created by supervisors, and read by the note author or the lesson author (teacher).
    match /supervisor_notes/{noteId} {
        allow create: if isRole('supervisor_subject');
        allow read: if resource.data.authorId == request.auth.uid || get(/databases/$(database)/documents/lessons/$(resource.data.lessonId)).data.authorId == request.auth.uid;
    }
  }
}
