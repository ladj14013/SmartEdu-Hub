
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check user role
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to read/write their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow 'directeur' and 'supervisor_general' to read/list any user document
      allow list, get: if request.auth != null && (isRole('directeur') || isRole('supervisor_general'));
    }

    // Rules for the 'lessons' collection
    match /lessons/{lessonId} {
        // Anyone signed in can read lessons
        allow read: if request.auth != null;
        // Only the author (teacher/supervisor) can create/update/delete
        allow write: if request.auth != null && request.resource.data.authorId == request.auth.uid;
    }

    // Rules for 'stages', 'levels', 'subjects'
    match /stages/{stageId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && isRole('directeur');
    }
    match /levels/{levelId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && isRole('directeur');
    }
     match /subjects/{subjectId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && isRole('directeur');
    }

    // Rules for student progress
    match /users/{studentId}/lessonProgress/{progressId} {
        // A student can read/write their own progress
        allow read, write: if request.auth != null && request.auth.uid == studentId;
    }
    
    // Rules for messages
    match /messages/{messageId} {
      // Anyone can create a message
      allow create: if request.auth != null;
      // Only director can read/update (e.g., mark as read/forward)
      allow read, update: if request.auth != null && isRole('directeur');
    }
    
    // Rules for general supervisor messages
     match /messages/{messageId} {
       // Supervisor general can read messages forwarded to them
       allow read: if request.auth != null && isRole('supervisor_general') && resource.data.forwardedTo == 'supervisor_general';
     }

  }
}
