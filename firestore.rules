rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to read and write their own user document
    match /users/{userId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow all authenticated users to read stages, levels, and subjects
    match /stages/{stageId} {
      allow read, write: if request.auth != null;
    }

    match /levels/{levelId} {
      allow read, write: if request.auth != null;
    }

    match /subjects/{subjectId} {
      allow read, write: if request.auth != null;
    }
    
    // Lessons can be read by anyone authenticated, but only created/updated/deleted by their author
    match /lessons/{lessonId} {
      allow read, write: if request.auth != null;
    }

    // Proposals can be created by authenticated users.
    // They can only be read by the proposer or a director.
    match /proposals/{proposalId} {
       allow create: if request.auth != null;
       allow read, update, delete: if request.auth != null && (request.auth.uid == resource.data.proposerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'directeur');
    }

    // Allow supervisors to add notes
    match /supervisor_notes/{noteId} {
        allow create, read: if request.auth != null;
    }

    // Students can update their own lesson progress
    match /users/{studentId}/lessonProgress/{lessonId} {
        allow read, write: if request.auth != null && request.auth.uid == studentId;
    }
    
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }
  }
}