rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS
    // - Anyone can create their own user document upon signup.
    // - Users can only read and update their own document.
    // - Authenticated users can read the 'name' and 'avatar' of other users.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow get: if request.auth != null;
    }

    // STAGES, LEVELS, SUBJECTS
    // - These are considered public data structures managed by the 'directeur'.
    // - Any authenticated user can read them.
    // - Only a 'directeur' can create, update, or delete them.
    function isDirector() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'directeur';
    }
    match /stages/{stageId} {
      allow read: if request.auth != null;
      allow write: if isDirector();
    }
    match /levels/{levelId} {
      allow read: if request.auth != null;
      allow write: if isDirector();
    }
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow write: if isDirector();
    }

    // LESSONS
    // - Authenticated users can read any lesson.
    // - Only the author ('teacher' or 'supervisor_subject') can update their own lesson.
    // - Only the author can delete their own lesson.
    // - Authenticated 'teacher' or 'supervisor_subject' can create lessons.
    function isTeacher() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
     function isSubjectSupervisor() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supervisor_subject';
    }
    match /lessons/{lessonId} {
      allow read: if request.auth != null;
      allow create: if isTeacher() || isSubjectSupervisor();
      allow update: if request.auth.uid == resource.data.authorId;
      allow delete: if request.auth.uid == resource.data.authorId;
    }

    // STUDENT LESSON PROGRESS
    // - Students can only create or update their own progress records.
    match /users/{studentId}/lessonProgress/{lessonId} {
      allow read, write: if request.auth.uid == studentId;
    }

    // MESSAGES
    // - Any user (even unauthenticated) can create a message (for the contact form).
    // - Only 'directeur' and 'supervisor_general' can read messages.
    // - Only 'directeur' can update messages (to mark as read/forwarded).
    function isGeneralSupervisor() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supervisor_general';
    }
    match /messages/{messageId} {
       allow create: if true;
       allow read, update: if isDirector() || isGeneralSupervisor();
    }
    
    // SETTINGS
    // - Only 'directeur' can read and write settings.
    match /settings/{settingId} {
      allow read, write: if isDirector();
    }

  }
}
