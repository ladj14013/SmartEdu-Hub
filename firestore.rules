rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only manage their own documents, but any authenticated user can read public profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow any authenticated user to read stages, levels, and subjects.
    match /stages/{stageId} {
      allow read: if request.auth != null;
      allow write: if false; // Managed by Director only
    }
    match /levels/{levelId} {
      allow read: if request.auth != null;
      allow write: if false; // Managed by Director only
    }
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow write: if false; // Managed by Director only
    }

    // Lessons can be read by any authenticated user.
    // Writing is handled by Server Actions with admin privileges, so client-side writes can be disabled.
    match /lessons/{lessonId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // Students can manage their own lesson progress.
    match /users/{studentId}/lessonProgress/{lessonId} {
      allow read, write: if request.auth != null && request.auth.uid == studentId;
    }

    // Allow authenticated users to send messages. Reading/forwarding is handled by server-side roles.
    match /messages/{messageId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Only server-side logic can manage this
    }
    
    // Only server-side logic can manage settings.
    match /settings/{settingId} {
      allow read, write: if false;
    }
  }
}
