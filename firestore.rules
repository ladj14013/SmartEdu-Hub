
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function getUserRole() {
      if (!isUserAuthenticated()) {
        return null;
      }
      return getUserData().role;
    }

    function isRole(role) {
        return isUserAuthenticated() && getUserRole() == role;
    }

    function isDirector() {
      return isRole('directeur');
    }

    // --- Specific Collection Rules ---

    // Anyone can read public data
    match /stages/{stageId} {
      allow read: if true;
      allow write: if isDirector();
    }
    match /levels/{levelId} {
      allow read: if true;
      allow write: if isDirector();
    }
    match /subjects/{subjectId} {
      allow read: if true;
      allow write: if isDirector();
    }
     match /settings/{settingId} {
      allow read: if true;
      allow write: if isDirector();
    }

    // Users can read/write their own data. Director has full access.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isDirector();
      allow create, delete: if isDirector(); // Only director can create/delete users
    }
    
    // Lessons can be read by any authenticated user.
    // Write access is for the author or the director.
    match /lessons/{lessonId} {
      allow read: if isUserAuthenticated();
      allow write: if isDirector() || (isUserAuthenticated() && request.resource.data.authorId == request.auth.uid);
    }
    
    // Authenticated users can send messages. Director can forward/update them.
    match /messages/{messageId} {
        allow create: if isUserAuthenticated();
        allow update: if isDirector();
    }
    
    // Notes can be created by authenticated users.
    match /supervisor_notes/{noteId} {
      allow read, create: if isUserAuthenticated();
    }

    // Users can manage their own lesson progress.
    match /users/{userId}/lessonProgress/{lessonId} {
        allow read, write: if isOwner(userId);
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
