rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ======= Helper Functions =======
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function getUserRole() {
      // It's safer to check for existence before accessing .data
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isDirector() {
      return isUserAuthenticated() && getUserRole() == 'directeur';
    }

    // ======= Public Read-Only Data =======
    // Anyone can read stages, levels, subjects, and settings.
    match /(stages|levels|subjects|settings)/{docId} {
      allow read: if true;
    }

    // ======= User Data Rules =======
    match /users/{userId} {
      // A user can read their own data. The director can read any user's data.
      allow read: if isOwner(userId) || isDirector();
      // A user can update their own data. The director can update any user's data.
      allow write: if isOwner(userId) || isDirector();
    }
    
    // ======= Lessons Rules =======
    match /lessons/{lessonId} {
      // Any authenticated user can read lessons.
      allow read: if isUserAuthenticated();
      // The director or the lesson author can write/update/delete.
      allow write: if isDirector() || (isUserAuthenticated() && request.resource.data.authorId == request.auth.uid);
    }

    // ======= Messages Rules =======
    match /messages/{messageId} {
        // Any user (even unauthenticated) can create a message (contact form)
        allow create: if true;
        // Only the director can update (forward) messages.
        allow update: if isDirector();
        // Only the director or general supervisor can read messages.
        allow read: if isDirector() || (isUserAuthenticated() && getUserRole() == 'supervisor_general');
    }

    // ======= All other collections/documents =======
    // By default, deny read/write to everything else unless specified above.
    // This is implicitly handled, but can be made explicit if needed.
    // Example for supervisor notes:
    match /supervisor_notes/{noteId} {
      allow read, write: if isUserAuthenticated() && (getUserRole() == 'supervisor_subject' || getUserRole() == 'teacher');
    }

  }
}
