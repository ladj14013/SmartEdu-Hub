
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the SmartEdu Hub platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "fullName": {
          "type": "string",
          "description": "The full name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The role of the user (e.g., student, teacher, director, supervisor)."
        },
        "stageId": {
          "type": "string",
          "description": "Reference to Stage. The stage the user is associated with. (Relationship: User 1:N Stage)"
        },
        "levelId": {
          "type": "string",
          "description": "Reference to Level. The level the user is associated with. (Relationship: User 1:N Level)"
        },
        "subjectId": {
          "type": "string",
          "description": "Reference to Subject. The subject the user is associated with, applicable to teachers and supervisors. (Relationship: User 1:N Subject)"
        },
        "teacherCode": {
          "type": "string",
          "description": "The unique code of the teacher, used for student-teacher connection."
        }
      },
      "required": [
        "id",
        "fullName",
        "email",
        "role"
      ]
    },
    "Stage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Stage",
      "type": "object",
      "description": "Represents a stage in the educational structure (e.g., Primary, Secondary).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Stage entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the stage."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Level": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Level",
      "type": "object",
      "description": "Represents a level within a stage (e.g., Grade 1, Grade 2).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Level entity."
        },
        "stageId": {
          "type": "string",
          "description": "Reference to Stage. The stage this level belongs to. (Relationship: Stage 1:N Level)"
        },
        "name": {
          "type": "string",
          "description": "The name of the level."
        }
      },
      "required": [
        "id",
        "stageId",
        "name"
      ]
    },
    "Subject": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subject",
      "type": "object",
      "description": "Represents a subject within a stage (e.g., Math, Science).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Subject entity."
        },
        "stageId": {
          "type": "string",
          "description": "Reference to Stage. The stage this subject belongs to. (Relationship: Stage 1:N Subject)"
        },
        "name": {
          "type": "string",
          "description": "The name of the subject."
        }
      },
      "required": [
        "id",
        "stageId",
        "name"
      ]
    },
    "Lesson": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Lesson",
      "type": "object",
      "description": "Represents a lesson within a subject.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Lesson entity."
        },
        "subjectId": {
          "type": "string",
          "description": "Reference to Subject. The subject this lesson belongs to. (Relationship: Subject 1:N Lesson)"
        },
        "levelId": {
          "type": "string",
          "description": "Reference to Level. The level this lesson is intended for. (Relationship: Level 1:N Lesson)"
        },
        "title": {
          "type": "string",
          "description": "The title of the lesson."
        },
        "content": {
          "type": "string",
          "description": "The content of the lesson (e.g., text, HTML)."
        },
        "videoUrl": {
          "type": "string",
          "description": "URL of a video associated with the lesson.",
          "format": "uri"
        },
        "isPublic": {
          "type": "boolean",
          "description": "Indicates whether the lesson is public or private."
        },
        "isLocked": {
          "type": "boolean",
          "description": "Indicates whether the lesson is locked or unlocked for students."
        },
        "teacherId": {
          "type": "string",
          "description": "Reference to User. The teacher who created the lesson. (Relationship: User 1:N Lesson)"
        }
      },
      "required": [
        "id",
        "subjectId",
        "levelId",
        "title",
        "content"
      ]
    },
    "Exercise": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Exercise",
      "type": "object",
      "description": "Represents an exercise or question within a lesson.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Exercise entity."
        },
        "lessonId": {
          "type": "string",
          "description": "Reference to Lesson. The lesson this exercise belongs to. (Relationship: Lesson 1:N Exercise)"
        },
        "question": {
          "type": "string",
          "description": "The text of the question."
        },
        "correctAnswer": {
          "type": "string",
          "description": "The correct answer to the question."
        }
      },
      "required": [
        "id",
        "lessonId",
        "question",
        "correctAnswer"
      ]
    },
    "StudentLessonProgress": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StudentLessonProgress",
      "type": "object",
      "description": "Represents a student's progress on a specific lesson.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the StudentLessonProgress entity."
        },
        "studentId": {
          "type": "string",
          "description": "Reference to User. The student who is taking the lesson. (Relationship: User 1:N StudentLessonProgress)"
        },
        "lessonId": {
          "type": "string",
          "description": "Reference to Lesson. The lesson the student is working on. (Relationship: Lesson 1:N StudentLessonProgress)"
        },
        "completionDate": {
          "type": "string",
          "description": "The date and time when the student completed the lesson.",
          "format": "date-time"
        },
        "score": {
          "type": "number",
          "description": "The student's score on the lesson (e.g., percentage)."
        }
      },
      "required": [
        "studentId",
        "lessonId"
      ]
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Message",
      "type": "object",
      "description": "Represents a message sent between users (e.g., from admin to supervisor).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Message entity."
        },
        "senderId": {
          "type": "string",
          "description": "Reference to User. The user who sent the message. (Relationship: User 1:N Message)"
        },
        "receiverId": {
          "type": "string",
          "description": "Reference to User. The user who received the message. (Relationship: User 1:N Message)"
        },
        "subject": {
          "type": "string",
          "description": "The subject of the message."
        },
        "content": {
          "type": "string",
          "description": "The content of the message."
        },
        "sentDate": {
          "type": "string",
          "description": "The date and time when the message was sent.",
          "format": "date-time"
        },
        "isRead": {
          "type": "boolean",
          "description": "Indicates whether the message has been read."
        }
      },
      "required": [
        "id",
        "senderId",
        "receiverId",
        "subject",
        "content",
        "sentDate"
      ]
    },
    "StructureProposal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StructureProposal",
      "type": "object",
      "description": "Represents a proposal to change the educational structure (e.g., add a subject).",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the proposal." },
        "proposerId": { "type": "string", "description": "ID of the user who made the proposal." },
        "proposerName": { "type": "string", "description": "Name of the user who made the proposal." },
        "type": { "type": "string", "description": "Type of proposal (e.g., 'add_subject')." },
        "status": { "type": "string", "description": "Status of the proposal (pending, approved, rejected)." },
        "details": {
          "type": "object",
          "properties": {
            "stageId": { "type": "string" },
            "stageName": { "type": "string" },
            "name": { "type": "string" },
            "description": { "type": "string" }
          }
        },
        "createdAt": { "type": "string", "format": "date-time" },
        "reviewedAt": { "type": "string", "format": "date-time" },
        "rejectionReason": { "type": "string" }
      },
      "required": ["id", "proposerId", "proposerName", "type", "status", "details", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/User"
      },
      "description": "Stores all the user profile information."
    },
    "/stages/{stageId}": {
      "schema": {
        "$ref": "#/entities/Stage"
      },
      "description": "Stores educational stages."
    },
    "/levels/{levelId}": {
      "schema": {
        "$ref": "#/entities/Level"
      },
      "description": "Stores educational levels within stages."
    },
    "/subjects/{subjectId}": {
      "schema": {
        "$ref": "#/entities/Subject"
      },
      "description": "Stores subjects within stages."
    },
    "/lessons/{lessonId}": {
      "schema": {
        "$ref": "#/entities/Lesson"
      },
      "description": "Stores lesson data."
    },
    "/lessons/{lessonId}/exercises/{exerciseId}": {
      "schema": {
        "$ref": "#/entities/Exercise"
      },
      "description": "Stores exercises within lessons."
    },
    "/users/{studentId}/lessonProgress/{lessonId}": {
      "schema": {
        "$ref": "#/entities/StudentLessonProgress"
      },
      "description": "Stores student progress for each lesson."
    },
    "/messages/{messageId}": {
      "schema": {
        "$ref": "#/entities/Message"
      },
      "description": "Stores messages between users."
    },
    "/proposals/{proposalId}": {
      "schema": {
        "$ref": "#/entities/StructureProposal"
      },
      "description": "Stores proposals for changes to the educational structure."
    }
  }
}
